{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/SignUp.js","components/Project.js","components/HWSet.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Project","props","name","description","HWSets","users","HWSet","capacity","availability","Dashboard","currentSets","setCurrentSets","userProjects","setUserProjects","pushState","getCurrentSets","url","process","console","log","fetch","then","response","json","jsondata","entries","loopHWSets","catch","err","getUserProjects","displayProjects","joinRef","joinError","setJoinError","joinLoading","setJoinLoading","joinMessage","setJoinMessage","createNameRef","createDescriptionRef","createIDRef","createError","setCreateError","createLoading","setCreateLoading","createMessage","setCreateMessage","checkoutIDRef","checkoutNameRef","checkoutAmmountRef","checkoutError","setCheckoutError","checkoutLoading","setCheckoutLoading","checkoutMessage","setCheckoutMessage","checkinIDRef","checkinNameRef","checkinAmmountRef","checkinError","setCheckinError","checkinLoading","setCheckinLoading","checkinMessage","setCheckinMessage","maxHeight","map","project","checkedOutHW","data","projectid","JSON","stringify","method","headers","body","color","backgroundColor","height","set","href","onClick","Login","PrivateRoute","Component","component","rest","render","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","finally","defaultValue","placeholder","App","state","names","handleChange","bind","handleSubmit","event","this","setState","target","getNames","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9ac3297.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyBbsNgXIJwymAzjNll8QF2wgqw4GnCZOKs\",\r\n  authDomain: \"powerup-hardware-auth-dev.firebaseapp.com\",\r\n  projectId: \"powerup-hardware-auth-dev\",\r\n  storageBucket: \"powerup-hardware-auth-dev.appspot.com\",\r\n  messagingSenderId: \"1062318995346\",\r\n  appId: \"1:1062318995346:web:c63b17f4fa022c550f334b\"\r\n  })\r\n\r\nexport const auth = firebase.auth(app)\r\nexport default app\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email,password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email,password) {\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function SignUp() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <header>\r\n                <Container\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                    style={{ minHeight: \"100vh\" }}\r\n                >\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{ maxWidth: \"450px\" }}\r\n                    >\r\n\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                            </Card.Body>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" ref={emailRef} required />\r\n                                </Form.Group>\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" ref={passwordRef} required />\r\n                                </Form.Group>\r\n                                <Form.Group id=\"password-confirm\">\r\n                                    <Form.Label>Password Confirmation</Form.Label>\r\n                                    <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                                    <Form.Label></Form.Label>\r\n                                </Form.Group>\r\n\r\n                                <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign up</Button>\r\n\r\n                            </Form>\r\n                            <div className=\"w-100 text center mt-2\">\r\n                                Already have an account? <Link to=\"/\">Log In</Link>\r\n                            </div>\r\n                        </Card>\r\n\r\n                    </div>\r\n                </Container>\r\n            </header>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport function Project(props) {\r\n    return (\r\n        <Container className=\"d-flex align-items-center justify-content-center\">\r\n            <div\r\n                className=\"w-100\"\r\n                style={{ maxWidth: \"450px\" }}\r\n            >\r\n                <h3>{props.name}</h3>\r\n                <p>Project ID: {props.id}</p>\r\n                <p>Description: {props.description}</p>\r\n                <p>LIST HERE {props.HWSets}</p>\r\n                <p>LIST HERE {props.users}</p>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function HWSet(props) {\r\n    return (\r\n        <div>\r\n            <h3>{props.name}</h3>\r\n            <p>Capacity: {props.capacity}</p>\r\n            <p>Availability: {props.availability}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Card, Button, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport { Project } from './Project'\r\nimport { HWSet } from './HWSet'\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [error, setError] = useState()\r\n    const { currentUser, logout } = useAuth()\r\n    const { history } = useHistory()\r\n\r\n    const [currentSets, setCurrentSets] = useState([]);\r\n    const [userProjects, setUserProjects] = useState([]);\r\n\r\n    const loopHWSets = (jsondata) => {\r\n        for (const [index, value] of jsondata[\"sets\"].entries()) {\r\n            setCurrentSets(currentSets => [...currentSets, value])\r\n        }\r\n    }\r\n\r\n    const displayProjects = (jsondata) => {\r\n        for (const [index, value] of jsondata[\"userProjects\"].entries()) {\r\n            setUserProjects(userProjects => [...userProjects, value])\r\n        }\r\n    }\r\n\r\n    async function handleLogout() {\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.pushState('/')\r\n        } catch {\r\n            setError('Failed to log out')\r\n        }\r\n    }\r\n\r\n    const getCurrentSets = () => {\r\n        const url = process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/hardware\";\r\n        console.log(url);\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((jsondata) => loopHWSets(jsondata))\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const getUserProjects = () => {\r\n        const url = process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/projects/\" + currentUser.email;\r\n        console.log(url);\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((jsondata) => displayProjects(jsondata))\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getCurrentSets();\r\n        getUserProjects();\r\n\r\n    }, []);\r\n\r\n    // JOIN EXISTING PROJECT\r\n    const joinRef = useRef()\r\n    const [joinError, setJoinError] = useState('')\r\n    const [joinLoading, setJoinLoading] = useState('')\r\n    const [joinMessage, setJoinMessage] = useState('')\r\n\r\n    function handleProjectJoining(e) {\r\n        e.preventDefault() //prevent browser refreshing page\r\n\r\n        setJoinLoading(true);\r\n        const data = { projectid: joinRef.current.value, user: currentUser.email };\r\n        console.log(JSON.stringify(data))\r\n\r\n        //POST request with body equal on data in JSON format\r\n        fetch(process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/projects/join\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then((response) => response.json())\r\n            //Then with the data from the response in JSON...\r\n            .then((data) => {\r\n                setJoinError('');\r\n                console.log('Success on connection:', data);\r\n\r\n                if (data[\"status\"] === -1) {\r\n                    setJoinError(data[\"error\"]);\r\n                    return;\r\n                }\r\n\r\n                setUserProjects(userProjects => [...userProjects, data[\"newlyJoinedProject\"]])\r\n\r\n                setJoinMessage('Successfully joined project');\r\n\r\n            })\r\n            //Then with the error generated...\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setJoinError('Failed to join project');\r\n            });\r\n\r\n        setJoinLoading(false)\r\n\r\n    }\r\n    // END JOIN EXISTING PROJECT\r\n\r\n    // CREATE PROJECT\r\n    const createNameRef = useRef()\r\n    const createDescriptionRef = useRef()\r\n    const createIDRef = useRef()\r\n    const [createError, setCreateError] = useState('')\r\n    const [createLoading, setCreateLoading] = useState('')\r\n    const [createMessage, setCreateMessage] = useState('')\r\n\r\n    function handleProjectCreating(e) {\r\n        e.preventDefault() //prevent browser refreshing page\r\n\r\n        setCreateLoading(true);\r\n        const data = {\r\n            name: createNameRef.current.value,\r\n            description: createDescriptionRef.current.value,\r\n            id: createIDRef.current.value,\r\n            user: currentUser.email\r\n        };\r\n        console.log(JSON.stringify(data))\r\n\r\n        //POST request with body equal on data in JSON format\r\n        fetch(process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/projects/create\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then((response) => response.json())\r\n            //Then with the data from the response in JSON...\r\n            .then((data) => {\r\n                setCreateError('');\r\n                console.log('Success:', data);\r\n\r\n                if (data[\"status\"] === -1) {\r\n                    setCreateError(data[\"error\"]);\r\n                    return;\r\n                }\r\n\r\n                setUserProjects(userProjects => [...userProjects, data[\"newlyCreatedProject\"]])\r\n\r\n                setCreateMessage('Successfully created project');\r\n            })\r\n            //Then with the error generated...\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setCreateError('Failed to create project');\r\n            });\r\n\r\n        setCreateLoading(false)\r\n\r\n    }\r\n\r\n    // END CREATE PROJECT\r\n\r\n    // CHECKOUT\r\n    const checkoutIDRef = useRef()\r\n    const checkoutNameRef = useRef()\r\n    const checkoutAmmountRef = useRef()\r\n    const [checkoutError, setCheckoutError] = useState('')\r\n    const [checkoutLoading, setCheckoutLoading] = useState('')\r\n    const [checkoutMessage, setCheckoutMessage] = useState('')\r\n\r\n    function handleCheckout(e) {\r\n        e.preventDefault() //prevent browser refreshing page\r\n\r\n        setCheckoutLoading(true);\r\n        const data = { projectid: joinRef.current.value, user: currentUser.email };\r\n        console.log(JSON.stringify(data))\r\n\r\n        //POST request with body equal on data in JSON format\r\n        fetch(process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/projects/join\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then((response) => response.json())\r\n            //Then with the data from the response in JSON...\r\n            .then((data) => {\r\n                setCheckoutError('');\r\n                console.log('Success:', data);\r\n                setCheckoutMessage('Successfully joined project');\r\n            })\r\n            //Then with the error generated...\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setCheckoutError('Failed to join project');\r\n            });\r\n\r\n        setCheckoutLoading(false)\r\n\r\n    }\r\n\r\n    // END CHECKOUT\r\n\r\n    // CHECKIN\r\n    const checkinIDRef = useRef()\r\n    const checkinNameRef = useRef()\r\n    const checkinAmmountRef = useRef()\r\n    const [checkinError, setCheckinError] = useState('')\r\n    const [checkinLoading, setCheckinLoading] = useState('')\r\n    const [checkinMessage, setCheckinMessage] = useState('')\r\n\r\n    function handleCheckin(e) {\r\n        e.preventDefault() //prevent browser refreshing page\r\n\r\n        setCheckinLoading(true);\r\n        const data = { projectid: joinRef.current.value, user: currentUser.email };\r\n        console.log(JSON.stringify(data))\r\n\r\n        //POST request with body equal on data in JSON format\r\n        fetch(process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/projects/join\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then((response) => response.json())\r\n            //Then with the data from the response in JSON...\r\n            .then((data) => {\r\n                setCheckinError('');\r\n                console.log('Success:', data);\r\n                setCheckinMessage('Successfully joined project');\r\n            })\r\n            //Then with the error genereted...\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setCheckinError('Failed to join project');\r\n            });\r\n\r\n        setCheckinLoading(false)\r\n\r\n    }\r\n\r\n    // END CHECKIN\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"white-font overflow-auto col-sm\" style={{ maxHeight: \"600px\" }}>\r\n                        <h1>\r\n                            Your projects:\r\n                        </h1>\r\n                        {userProjects.map(project => (\r\n                            <Project key={project.id}\r\n                                name={project.name}\r\n                                id={project.id}\r\n                                description={project.description}\r\n                                HWSets={project.checkedOutHW}\r\n                                users={project.users} />\r\n                        ))}\r\n\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n\r\n                        <Container\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{ minHeight: \"25vh\" }}\r\n                        >\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{ maxWidth: \"450px\" }}\r\n                            >\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <h2 className=\"text-center mb-4\">Join project</h2>\r\n                                        {joinError && <Alert variant=\"danger\">{joinError}</Alert>}\r\n                                        {joinMessage && <Alert variant=\"success\">{joinMessage}</Alert>}\r\n                                        <Form onSubmit={handleProjectJoining}>\r\n                                            <Form.Group id=\"join_project\">\r\n                                                <Form.Label>Enter project ID</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={joinRef} required />\r\n                                                <Form.Label></Form.Label>\r\n                                            </Form.Group>\r\n                                            <Button disabled={joinLoading} className=\"w-100\" type=\"submit\">Join Project</Button>\r\n                                        </Form>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                        </Container>\r\n\r\n                        <Container\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{ minHeight: \"25vh\" }}\r\n                        >\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{ maxWidth: \"450px\" }}\r\n                            >\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <h2 className=\"text-center mb-4\">Create project</h2>\r\n                                        {createError && <Alert variant=\"danger\">{createError}</Alert>}\r\n                                        {createMessage && <Alert variant=\"success\">{createMessage}</Alert>}\r\n                                        <Form onSubmit={handleProjectCreating}>\r\n                                            <Form.Group id=\"create_project\">\r\n                                                <Form.Label>Enter a project name</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={createNameRef} required />\r\n                                                <Form.Label>Enter a project description</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={createDescriptionRef} required />\r\n                                                <Form.Label>Enter a project ID</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={createIDRef} required />\r\n                                                <Form.Label></Form.Label>\r\n                                            </Form.Group>\r\n                                            <Button disabled={createLoading} className=\"w-100\" type=\"submit\">Create project</Button>\r\n                                        </Form>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                        </Container>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <hr\r\n                style={{\r\n                    color: 'blue',\r\n                    backgroundColor: 'blue',\r\n                    height: 10,\r\n                }}\r\n            />\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"white-font className=overflow-auto col-sm\">\r\n                        <h1>\r\n                            Available Hardware Sets:\r\n                        </h1>\r\n                        {currentSets.map(set => (\r\n                            <HWSet key={set.name}\r\n                                name={set.name}\r\n                                capacity={set.capacity}\r\n                                availability={set.availability} />\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n\r\n                        <Container\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{ minHeight: \"25vh\" }}\r\n                        >\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{ maxWidth: \"450px\" }}\r\n                            >\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <h2 className=\"text-center mb-4\">Checkout hardware</h2>\r\n                                        {checkoutError && <Alert variant=\"danger\">{checkoutError}</Alert>}\r\n                                        {checkoutMessage && <Alert variant=\"success\">{checkoutMessage}</Alert>}\r\n                                        <Form onSubmit={handleCheckout}>\r\n                                            <Form.Group id=\"checkout\">\r\n                                                <Form.Label>Enter a project ID</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkoutIDRef} required />\r\n                                                <Form.Label>Enter a hardware set name</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkoutNameRef} required />\r\n                                                <Form.Label>Enter an ammount</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkoutAmmountRef} required />\r\n                                                <Form.Label></Form.Label>\r\n                                            </Form.Group>\r\n                                            <Button disabled={checkoutLoading} className=\"w-100\" type=\"submit\">Checkout</Button>\r\n                                        </Form>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                        </Container>\r\n\r\n                        <Container\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{ minHeight: \"25vh\" }}\r\n                        >\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{ maxWidth: \"450px\" }}\r\n                            >\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <h2 className=\"text-center mb-4\">Checkin hardware</h2>\r\n                                        {checkinError && <Alert variant=\"danger\">{checkinError}</Alert>}\r\n                                        {checkinMessage && <Alert variant=\"success\">{checkinMessage}</Alert>}\r\n                                        <Form onSubmit={handleCheckin}>\r\n                                            <Form.Group id=\"checkout\">\r\n                                                <Form.Label>Enter a project ID</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkinIDRef} required />\r\n                                                <Form.Label>Enter a hardware set name</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkinNameRef} required />\r\n                                                <Form.Label>Enter an ammount</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkinAmmountRef} required />\r\n                                                <Form.Label></Form.Label>\r\n                                            </Form.Group>\r\n                                            <Button disabled={checkinLoading} className=\"w-100\" type=\"submit\">Checkin</Button>\r\n                                        </Form>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <hr\r\n                style={{\r\n                    color: 'blue',\r\n                    backgroundColor: 'blue',\r\n                    height: 10,\r\n                }}\r\n            />\r\n\r\n            <div>\r\n                <Container\r\n                    className=\"align-items-center justify-content-center\"\r\n                    style={{ minHeight: \"25vh\" }}\r\n                >\r\n\r\n                    <h1 className=\"white-font\">Available Datasets:</h1>\r\n\r\n                    <h3 className=\"white-font\">\r\n                        Blood Pressure in Salt-Sensitive Dahl Rats\r\n                    </h3>\r\n                    <p className=\"white-font\">This database contains continuous blood pressure recordings for 9 Dahl SS rats and 6 Dahl SS.13BN rats, under high and low salt conditions.</p>\r\n                    <p className=\"white-font\">\r\n                        <a href=\"https://physionet.org/static/published-projects/bpssrat/blood-pressure-in-salt-sensitive-dahl-rats-1.0.0.zip\">\r\n                            Download (3.4MB)\r\n                        </a>\r\n                    </p>\r\n\r\n                    <h3 className=\"white-font\">\r\n                        Gait in Aging and Disease Database\r\n                    </h3>\r\n                    <p className=\"white-font\">Walking stride interval time series from 15 subjects.</p>\r\n                    <p className=\"white-font\">\r\n                        <a href=\"https://physionet.org/static/published-projects/gaitdb/gait-in-aging-and-disease-database-1.0.0.zip\">\r\n                            Download (354.6KB)\r\n                        </a>\r\n                    </p>\r\n\r\n                    <h3 className=\"white-font\">\r\n                        Long Term AF Database\r\n                    </h3>\r\n                    <p className=\"white-font\">This database includes 84 long-term ECG recordings of subjects with paroxysmal or sustained atrial fibrillation (AF). Each record contains two simultaneously recorded ECG signals digitized at 128 Hz …</p>\r\n                    <p className=\"white-font\">\r\n                        <a href=\"https://physionet.org/static/published-projects/ltafdb/long-term-af-database-1.0.0.zip\">\r\n                            Download (1.7GB)\r\n                        </a>\r\n                    </p>\r\n\r\n                    <h3 className=\"white-font\">\r\n                        MIT-BIH Arrhythmia Database\r\n                    </h3>\r\n                    <p className=\"white-font\">Two-channel ambulatory ECG recordings, obtained from 47 subjects studied by the BIH Arrhythmia Laboratory between 1975 and 1979. </p>\r\n                    <p className=\"white-font\">\r\n                        <a href=\"https://physionet.org/static/published-projects/mitdb/mit-bih-arrhythmia-database-1.0.0.zip\">\r\n                            Download (73.5MB)\r\n                        </a>\r\n                    </p>\r\n\r\n                    <h3 className=\"white-font\">\r\n                        MMG Database\r\n                    </h3>\r\n                    <p className=\"white-font\">Uterine magnetomyographic signals from 25 subjects recorded using a 151 channel Reproductive Assessment system.</p>\r\n                    <p className=\"white-font\">\r\n                        <a href=\"https://physionet.org/static/published-projects/mmgdb/mmg-database-1.0.0.zip\">\r\n                            Download (215.7MB)\r\n                        </a>\r\n                    </p>\r\n\r\n                </Container>\r\n            </div>\r\n\r\n            <hr\r\n                style={{\r\n                    color: 'blue',\r\n                    backgroundColor: 'blue',\r\n                    height: 10,\r\n                }}\r\n            />\r\n\r\n            <Container\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{ minHeight: \"25vh\" }}\r\n            >\r\n                <div\r\n                    className=\"w-100\"\r\n                    style={{ maxWidth: \"450px\" }}\r\n                >\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h2 className=\"text-center mb-4\">Profile</h2>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <strong> Email: </strong>{currentUser.email}\r\n                            <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text center mt-2\">\r\n                        <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport './App.css';\r\n\r\nexport default function Login() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/dashboard\")\r\n        } catch {\r\n            setError('Failed to log in')\r\n        }\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <Container\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                    style={{ minHeight: \"91vh\" }}\r\n                >\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{ maxWidth: \"450px\" }}\r\n                    >\r\n\r\n                        <Card className=\"container-darkmode\">\r\n                            <Card.Body>\r\n                                <h2 className=\"text-center mb-4\">Log In</h2>\r\n                                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group id=\"email\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                                    </Form.Group>\r\n                                    <Form.Group id=\"password\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                                        <Form.Label></Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\r\n\r\n                                </Form>\r\n                                <div className=\"w-100 text center mt-3\">\r\n                                    <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                        <div className=\"w-100 text center mt-2 white-font\">\r\n                            Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Container>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function PrivateRoute( { component: Component, ...rest } ) {\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to =\"/login\"/>\r\n            }}\r\n        ></Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function ForgotPassword() {\r\n\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        } catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <header>\r\n                <Container\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                    style={{ minHeight: \"100vh\" }}\r\n                >\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{ maxWidth: \"450px\" }}\r\n                    >\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n\r\n                                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                                {message && <Alert variant=\"success\">{message}</Alert>}\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group id=\"email\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                                        <Form.Label></Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\r\n\r\n                                </Form>\r\n                                <div className=\"w-100 text center mt-3\">\r\n                                    <Link to=\"/\">Login</Link>\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div className=\"w-100 text center mt-2\">\r\n                            Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Container>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function UpdateProfile() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser, updateEmail, updatePassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(() => {\r\n            setError('Failed to update account')\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <Container\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                    style={{ minHeight: \"90vh\" }}\r\n                >\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{ maxWidth: \"450px\" }}\r\n                    >\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n\r\n                                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group id=\"email\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n                                    </Form.Group>\r\n                                    <Form.Group id=\"password\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group id=\"password-confirm\">\r\n                                        <Form.Label>Password Confirmation</Form.Label>\r\n                                        <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n                                        <Form.Label></Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Update</Button>\r\n\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div className=\"w-100 text center mt-2\">\r\n                            <Link to=\"/dashboard\">Cancel</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Container>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SignUp from './SignUp';\r\nimport { AuthProvider } from '../contexts/AuthContext'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./Dashboard\"\r\nimport Login from \"./Login\"\r\nimport PrivateRoute from './PrivateRoute';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport UpdateProfile from './UpdateProfile';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            names: [],\r\n            loading: true\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true,\r\n        })\r\n        await fetch('/addname/' + this.state.name, {\r\n            method: 'GET'\r\n        });\r\n        this.getNames()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <h1 className=\"gradient-text\">\r\n                    PowerUp Hardware\r\n                </h1>\r\n\r\n                <hr\r\n                    style={{\r\n                    color: 'blue',\r\n                    backgroundColor: 'blue',\r\n                    height: 10\r\n                }}/>\r\n\r\n                <Router>\r\n                    <AuthProvider>\r\n                        <Switch>\r\n                            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n                            <Route path=\"/signup\" component={SignUp} />\r\n                            <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n                            <Route path=\"/\" component={Login} />\r\n                            <Route path=\"/login\" component={Login} />\r\n                        </Switch>\r\n                    </AuthProvider>\r\n                </Router>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}