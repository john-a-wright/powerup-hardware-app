{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/SignUp.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","currentSets","setCurrentSets","pushState","url","process","console","log","fetch","then","response","json","jsondata","catch","err","getCurrentSets","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","finally","defaultValue","placeholder","App","state","name","names","handleChange","bind","handleSubmit","event","this","setState","target","method","getNames","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88630746.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyBbsNgXIJwymAzjNll8QF2wgqw4GnCZOKs\",\r\n  authDomain: \"powerup-hardware-auth-dev.firebaseapp.com\",\r\n  projectId: \"powerup-hardware-auth-dev\",\r\n  storageBucket: \"powerup-hardware-auth-dev.appspot.com\",\r\n  messagingSenderId: \"1062318995346\",\r\n  appId: \"1:1062318995346:web:c63b17f4fa022c550f334b\"\r\n  })\r\n\r\nexport const auth = firebase.auth(app)\r\nexport default app\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email,password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email,password) {\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, {useRef, useState} from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport default function SignUp() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                </Card.Body>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                    </Form.Group>\r\n\r\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign up</Button>\r\n\r\n                </Form>\r\n            </Card>\r\n            <div className=\"w-100 text center mt-2\">\r\n                Already have an account? <Link to=\"/login\">Log In</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [error, setError] = useState()\r\n    const {currentUser, logout} = useAuth()\r\n    const { history } = useHistory()\r\n\r\n    const [currentSets, setCurrentSets] = React.useState(\"\");\r\n\r\n    async function handleLogout() {\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.pushState('/login')\r\n        } catch {\r\n            setError('Failed to log out')\r\n        }\r\n    }\r\n\r\n    const getCurrentSets = () => {\r\n        const url = process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/hardware\";\r\n        console.log(url);\r\n        fetch(url)\r\n          .then((response) => response.json())\r\n          .then((jsondata) => setCurrentSets(jsondata[\"message\"]))\r\n          .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCurrentSets();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong> Email: </strong>{currentUser.email}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n            </div>\r\n            <div>\r\n                <h1>\r\n                    Current Hardware Sets:\r\n                </h1>\r\n                <p>\r\n                    {currentSets}\r\n                </p>\r\n            </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport default function Login() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/dashboard\")\r\n        } catch {\r\n            setError('Failed to log in')\r\n        }\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Log In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\r\n\r\n                    </Form>\r\n                    <div className=\"w-100 text center mt-3\">\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function PrivateRoute( { component: Component, ...rest } ) {\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to =\"/login\"/>\r\n            }}\r\n        ></Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function ForgotPassword() {\r\n\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        } catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\r\n\r\n                    </Form>\r\n                    <div className=\"w-100 text center mt-3\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, {useRef, useState} from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport default function UpdateProfile() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser, updateEmail, updatePassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if(emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n\r\n        if(passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(() => {\r\n            setError('Failed to update account')\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                </Card.Body>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\"/>\r\n                    </Form.Group>\r\n\r\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Update</Button>\r\n\r\n                </Form>\r\n            </Card>\r\n            <div className=\"w-100 text center mt-2\">\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SignUp from './SignUp';\r\nimport { Container } from 'react-bootstrap'\r\nimport { AuthProvider } from '../contexts/AuthContext'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./Dashboard\"\r\nimport Login from \"./Login\"\r\nimport PrivateRoute from './PrivateRoute';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport UpdateProfile from './UpdateProfile';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            names: [],\r\n            loading: true\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true,\r\n        })\r\n        await fetch('/addname/' + this.state.name, {\r\n            method: 'GET'\r\n        });\r\n        this.getNames()\r\n    }\r\n\r\n    /*componentDidMount() {\r\n        this.getNames();\r\n    }*/\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <h1>\r\n                    PowerUp Hardware\r\n                </h1>\r\n\r\n                <header className=\"App-header\">\r\n                    <Container\r\n                        className=\"d-flex align-items-center justify-content-center\"\r\n                        style={{ minHeight: \"100vh\" }}\r\n                    >\r\n                        <div\r\n                            className=\"w-100\"\r\n                            style={{ maxWidth: \"450px\" }}\r\n                        >\r\n                            <Router>\r\n                                <AuthProvider>\r\n                                    <Switch>\r\n                                        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                                        <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n                                        <Route path=\"/signup\" component={SignUp} />\r\n                                        <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n                                        <Route path=\"/\" component={Login} />\r\n                                        <Route path=\"/login\" component={Login} />\r\n                                    </Switch>\r\n                                </AuthProvider>\r\n                            </Router>\r\n                        </div>\r\n                    </Container>\r\n                </header>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}