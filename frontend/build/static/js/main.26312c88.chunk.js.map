{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/SignUp.js","components/Project.js","components/HWSet.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","placeholder","Button","disabled","to","Project","props","name","description","concatinateHWSets","HWSets","concatinateUsers","users","array","buffer","map","item","set","HWSet","capacity","availability","Dashboard","currentSets","setCurrentSets","userProjects","setUserProjects","updateSet","data","i","j","updatedSets","length","setToBeUpdated","updateProject","updatedProjects","projectToBeUpdated","checkedOutHW","pushState","getCurrentSets","url","process","console","log","fetch","then","response","json","jsondata","entries","loopHWSets","catch","err","getUserProjects","displayProjects","joinRef","joinError","setJoinError","joinLoading","setJoinLoading","joinMessage","setJoinMessage","createNameRef","createDescriptionRef","createIDRef","createError","setCreateError","createLoading","setCreateLoading","createMessage","setCreateMessage","checkoutIDRef","checkoutNameRef","checkoutAmountRef","checkoutError","setCheckoutError","checkoutLoading","setCheckoutLoading","checkoutMessage","setCheckoutMessage","checkinIDRef","checkinNameRef","checkinAmountRef","checkinError","setCheckinError","checkinLoading","setCheckinLoading","checkinMessage","setCheckinMessage","maxHeight","minWidth","class","project","projectid","JSON","stringify","method","headers","body","color","backgroundColor","height","hwset","amount","href","onClick","Login","PrivateRoute","Component","component","rest","render","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","finally","defaultValue","App","state","names","handleChange","bind","handleSubmit","event","this","setState","target","getNames","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26312c88.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyBbsNgXIJwymAzjNll8QF2wgqw4GnCZOKs\",\r\n  authDomain: \"powerup-hardware-auth-dev.firebaseapp.com\",\r\n  projectId: \"powerup-hardware-auth-dev\",\r\n  storageBucket: \"powerup-hardware-auth-dev.appspot.com\",\r\n  messagingSenderId: \"1062318995346\",\r\n  appId: \"1:1062318995346:web:c63b17f4fa022c550f334b\"\r\n  })\r\n\r\nexport const auth = firebase.auth(app)\r\nexport default app\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email,password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email,password) {\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function SignUp() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <header>\r\n                <Container\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                    style={{ minHeight: \"91vh\" }}\r\n                >\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{ maxWidth: \"450px\" }}\r\n                    >\r\n\r\n                        <Card className=\"container-darkmode\">\r\n                            <Card.Body>\r\n                                <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n\r\n                                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group id=\"email\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"email\" ref={emailRef} required placeholder=\"Email\"/>\r\n                                    </Form.Group>\r\n                                    <Form.Group id=\"password\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control type=\"password\" ref={passwordRef} required placeholder=\"Password (at least 6 characters)\"/>\r\n                                    </Form.Group>\r\n                                    <Form.Group id=\"password-confirm\">\r\n                                        <Form.Label>Password Confirmation</Form.Label>\r\n                                        <Form.Control type=\"password\" ref={passwordConfirmRef} required placeholder=\"Confirm passsword\"/>\r\n                                        <Form.Label></Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign up</Button>\r\n\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div className=\"w-100 text center mt-2 white-font\">\r\n                            Already have an account? <Link to=\"/\">Log In</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Container>\r\n            </header>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function Project(props) {\r\n    return (\r\n        <tr>\r\n            <td>{props.name}</td>\r\n            <td>{props.id}</td>\r\n            <td>{props.description}</td>\r\n\r\n            {concatinateHWSets(props.HWSets)}\r\n\r\n            {concatinateUsers(props.users)}\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction concatinateUsers(array){\r\n    let buffer = []\r\n\r\n    array.map(item =>{\r\n        buffer.push(<div>{item}</div>)\r\n    })\r\n\r\n    return (\r\n        <td>\r\n            {buffer}\r\n        </td>\r\n    )\r\n}\r\n\r\nfunction concatinateHWSets(array){\r\n    let buffer = []\r\n\r\n    array.map(set => {\r\n        buffer.push(<div>{set[0]}: {set[1]}</div>)\r\n    })\r\n\r\n    return (\r\n        <td>\r\n            {buffer}\r\n        </td>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function HWSet(props) {\r\n    return (\r\n        <tr>\r\n            <td>{props.name}</td>\r\n            <td>{props.capacity}</td>\r\n            <td>{props.availability}</td>\r\n        </tr>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Card, Button, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport { Project } from './Project'\r\nimport { HWSet } from './HWSet'\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [error, setError] = useState()\r\n    const { currentUser, logout } = useAuth()\r\n    const { history } = useHistory()\r\n\r\n    const [currentSets, setCurrentSets] = useState([]);\r\n    const [userProjects, setUserProjects] = useState([]);\r\n\r\n    const loopHWSets = (jsondata) => {\r\n        for (const [index, value] of jsondata[\"sets\"].entries()) {\r\n            setCurrentSets(currentSets => [...currentSets, value])\r\n        }\r\n    }\r\n\r\n    const displayProjects = (jsondata) => {\r\n        for (const [index, value] of jsondata[\"userProjects\"].entries()) {\r\n            setUserProjects(userProjects => [...userProjects, value])\r\n        }\r\n    }\r\n\r\n    const updateSet = (data) => {\r\n        var i;\r\n        var j;\r\n        var updatedSets = [];\r\n        for (i = 0; i < currentSets.length; i++) {\r\n            if (currentSets[i].name === data[\"newSet\"][\"name\"]) {\r\n                //found hwset in state array: loop back thru\r\n                for (j = 0; j < currentSets.length; j++) {\r\n                    if (j === i) {\r\n                        var setToBeUpdated = currentSets[i]\r\n                        setToBeUpdated.availability = data[\"newSet\"][\"availability\"]\r\n\r\n                        updatedSets.push(setToBeUpdated)\r\n                    } else {\r\n                        updatedSets.push(currentSets[j])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setCurrentSets(updatedSets)\r\n    }\r\n\r\n    const updateProject = (data) => {\r\n        var i;\r\n        var j;\r\n        var updatedProjects = [];\r\n        for (i = 0; i < userProjects.length; i++) {\r\n            if (userProjects[i].id === data[\"newProject\"][\"id\"]) {\r\n                //found project in state array: loop back thru\r\n                for (j = 0; j < userProjects.length; j++) {\r\n                    if (j === i) {\r\n                        var projectToBeUpdated = userProjects[i]\r\n                        projectToBeUpdated.checkedOutHW = data[\"newProject\"][\"checkedOutHW\"]\r\n\r\n                        updatedProjects.push(projectToBeUpdated)\r\n                    } else {\r\n                        updatedProjects.push(userProjects[j])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setUserProjects(updatedProjects)\r\n    }\r\n\r\n    async function handleLogout() {\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.pushState('/')\r\n        } catch {\r\n            setError('Failed to log out')\r\n        }\r\n    }\r\n\r\n    const getCurrentSets = () => {\r\n        const url = process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/hardware\";\r\n        console.log(url);\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((jsondata) => loopHWSets(jsondata))\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const getUserProjects = () => {\r\n        const url = process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/projects/\" + currentUser.email;\r\n        console.log(url);\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((jsondata) => displayProjects(jsondata))\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getCurrentSets();\r\n        getUserProjects();\r\n\r\n    }, []);\r\n\r\n    // JOIN EXISTING PROJECT\r\n    const joinRef = useRef()\r\n    const [joinError, setJoinError] = useState('')\r\n    const [joinLoading, setJoinLoading] = useState('')\r\n    const [joinMessage, setJoinMessage] = useState('')\r\n\r\n    function handleProjectJoining(e) {\r\n        e.preventDefault() //prevent browser refreshing page\r\n\r\n        setJoinLoading(true);\r\n        const data = { projectid: joinRef.current.value, user: currentUser.email };\r\n        console.log(JSON.stringify(data))\r\n\r\n        //POST request with body equal on data in JSON format\r\n        fetch(process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/projects/join\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then((response) => response.json())\r\n            //Then with the data from the response in JSON...\r\n            .then((data) => {\r\n                setJoinMessage('');\r\n                setJoinError('');\r\n                console.log('Success on connection:', data);\r\n\r\n                if (data[\"status\"] === -1) {\r\n                    setJoinError(data[\"error\"]);\r\n                    return;\r\n                }\r\n\r\n                setUserProjects(userProjects => [...userProjects, data[\"newlyJoinedProject\"]])\r\n\r\n                setJoinMessage('Successfully joined project');\r\n\r\n            })\r\n            //Then with the error generated...\r\n            .catch((error) => {\r\n                setJoinMessage('');\r\n                console.error('Error:', error);\r\n                setJoinError('Failed to join project');\r\n            });\r\n\r\n        setJoinLoading(false)\r\n\r\n    }\r\n    // END JOIN EXISTING PROJECT\r\n\r\n    // CREATE PROJECT\r\n    const createNameRef = useRef()\r\n    const createDescriptionRef = useRef()\r\n    const createIDRef = useRef()\r\n    const [createError, setCreateError] = useState('')\r\n    const [createLoading, setCreateLoading] = useState('')\r\n    const [createMessage, setCreateMessage] = useState('')\r\n\r\n    function handleProjectCreating(e) {\r\n        e.preventDefault() //prevent browser refreshing page\r\n\r\n        setCreateLoading(true);\r\n        const data = {\r\n            name: createNameRef.current.value,\r\n            description: createDescriptionRef.current.value,\r\n            id: createIDRef.current.value,\r\n            user: currentUser.email\r\n        };\r\n        console.log(JSON.stringify(data))\r\n\r\n        //POST request with body equal on data in JSON format\r\n        fetch(process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/projects/create\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then((response) => response.json())\r\n            //Then with the data from the response in JSON...\r\n            .then((data) => {\r\n                setCreateError('');\r\n                console.log('Success:', data);\r\n\r\n                if (data[\"status\"] === -1) {\r\n                    setCreateMessage('');\r\n                    setCreateError(data[\"error\"]);\r\n                    return;\r\n                }\r\n\r\n                setUserProjects(userProjects => [...userProjects, data[\"newlyCreatedProject\"]])\r\n\r\n                setCreateMessage('Successfully created project');\r\n            })\r\n            //Then with the error generated...\r\n            .catch((error) => {\r\n                setCreateMessage('');\r\n                console.error('Error:', error);\r\n                setCreateError('Failed to create project');\r\n            });\r\n\r\n        setCreateLoading(false)\r\n\r\n    }\r\n\r\n    // END CREATE PROJECT\r\n\r\n    // CHECKOUT\r\n    const checkoutIDRef = useRef()\r\n    const checkoutNameRef = useRef()\r\n    const checkoutAmountRef = useRef()\r\n    const [checkoutError, setCheckoutError] = useState('')\r\n    const [checkoutLoading, setCheckoutLoading] = useState('')\r\n    const [checkoutMessage, setCheckoutMessage] = useState('')\r\n\r\n    function handleCheckout(e) {\r\n        e.preventDefault() //prevent browser refreshing page\r\n\r\n        setCheckoutLoading(true);\r\n        const data = {\r\n            id: checkoutIDRef.current.value,\r\n            hwset: checkoutNameRef.current.value,\r\n            amount: checkoutAmountRef.current.value,\r\n            user: currentUser.email\r\n        };\r\n        console.log(JSON.stringify(data))\r\n\r\n        //POST request with body equal on data in JSON format\r\n        fetch(process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/hardware/checkout\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then((response) => response.json())\r\n            //Then with the data from the response in JSON...\r\n            .then((data) => {\r\n                setCheckoutError('');\r\n                console.log('Success network-wise:', data);\r\n\r\n                if (data[\"status\"] === -1) {\r\n                    setCheckoutMessage('');\r\n                    setCheckoutError(data[\"error\"]);\r\n                    return;\r\n                }\r\n\r\n                updateSet(data);\r\n                updateProject(data);\r\n\r\n                setCheckoutMessage('Successfully checked out hardware');\r\n            })\r\n            //Then with the error generated...\r\n            .catch((error) => {\r\n                setCheckoutMessage('');\r\n                console.error('Error:', error);\r\n                setCheckoutError('Failed checked out hardware');\r\n            });\r\n\r\n        setCheckoutLoading(false)\r\n\r\n    }\r\n\r\n    // END CHECKOUT\r\n\r\n    // CHECKIN\r\n    const checkinIDRef = useRef()\r\n    const checkinNameRef = useRef()\r\n    const checkinAmountRef = useRef()\r\n    const [checkinError, setCheckinError] = useState('')\r\n    const [checkinLoading, setCheckinLoading] = useState('')\r\n    const [checkinMessage, setCheckinMessage] = useState('')\r\n\r\n    function handleCheckin(e) {\r\n        e.preventDefault() //prevent browser refreshing page\r\n\r\n        setCheckinLoading(true);\r\n        const data = {\r\n            id: checkinIDRef.current.value,\r\n            hwset: checkinNameRef.current.value,\r\n            amount: checkinAmountRef.current.value,\r\n            user: currentUser.email\r\n        };\r\n        console.log(JSON.stringify(data))\r\n\r\n        //POST request with body equal on data in JSON format\r\n        fetch(process.env.REACT_APP_URL_PREFIX + \"/api/dashboard/hardware/checkin\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then((response) => response.json())\r\n            //Then with the data from the response in JSON...\r\n            .then((data) => {\r\n                setCheckinError('');\r\n                console.log('Success network-wise:', data);\r\n\r\n                if (data[\"status\"] === -1) {\r\n                    setCheckinMessage('');\r\n                    setCheckinError(data[\"error\"]);\r\n                    return;\r\n                }\r\n\r\n                updateSet(data);\r\n                updateProject(data);\r\n\r\n                setCheckinMessage('Successfully checked in hardware');\r\n            })\r\n            //Then with the error genereted...\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setCheckinMessage('');\r\n                setCheckinError('Failed to check in hardware');\r\n            });\r\n\r\n        setCheckinLoading(false)\r\n\r\n    }\r\n\r\n    // END CHECKIN\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"white-font overflow-auto col-sm\"\r\n                        style={{\r\n                            maxHeight: \"600px\",\r\n                            minWidth: \"800px\"\r\n                        }}>\r\n                        <h1>\r\n                            Your projects\r\n                        </h1>\r\n\r\n                        <table className=\"table table-dark table-striped table-bordered\">\r\n                            <thead>\r\n                                <tr class=\"table-primary\">\r\n                                    <th>Name</th>\r\n                                    <th>Project ID</th>\r\n                                    <th>Description</th>\r\n                                    <th>Current Hardware</th>\r\n                                    <th>Users</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {userProjects.map(project => (\r\n                                    <Project key={project.id}\r\n                                        name={project.name}\r\n                                        id={project.id}\r\n                                        description={project.description}\r\n                                        HWSets={project.checkedOutHW}\r\n                                        users={project.users} />\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n\r\n                        <Container\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{ minHeight: \"25vh\" }}\r\n                        >\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{ maxWidth: \"450px\" }}\r\n                            >\r\n                                <Card className=\"container-darkmode\">\r\n                                    <Card.Body>\r\n                                        <h2 className=\"text-center mb-4\">Join project</h2>\r\n                                        {joinError && <Alert variant=\"danger\">{joinError}</Alert>}\r\n                                        {joinMessage && <Alert variant=\"success\">{joinMessage}</Alert>}\r\n                                        <Form onSubmit={handleProjectJoining}>\r\n                                            <Form.Group id=\"join_project\">\r\n                                                <Form.Label>Enter project ID</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={joinRef} required placeholder=\"ID\" />\r\n                                                <Form.Label></Form.Label>\r\n                                            </Form.Group>\r\n                                            <Button disabled={joinLoading} className=\"w-100\" type=\"submit\">Join Project</Button>\r\n                                        </Form>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                        </Container>\r\n\r\n                        <hr className=\"break1\" />\r\n\r\n                        <Container\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{ minHeight: \"25vh\" }}\r\n                        >\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{ maxWidth: \"450px\" }}\r\n                            >\r\n                                <Card className=\"container-darkmode\">\r\n                                    <Card.Body>\r\n                                        <h2 className=\"text-center mb-4\">Create project</h2>\r\n                                        {createError && <Alert variant=\"danger\">{createError}</Alert>}\r\n                                        {createMessage && <Alert variant=\"success\">{createMessage}</Alert>}\r\n                                        <Form onSubmit={handleProjectCreating}>\r\n                                            <Form.Group id=\"create_project\">\r\n                                                <Form.Label>Enter a project name</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={createNameRef} required placeholder=\"Name\" />\r\n                                                <Form.Label>Enter a project description</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={createDescriptionRef} required placeholder=\"Description\" />\r\n                                                <Form.Label>Enter a project ID</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={createIDRef} required placeholder=\"Positive number\" />\r\n                                                <Form.Label></Form.Label>\r\n                                            </Form.Group>\r\n                                            <Button disabled={createLoading} className=\"w-100\" type=\"submit\">Create project</Button>\r\n                                        </Form>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                        </Container>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <hr\r\n                style={{\r\n                    color: 'blue',\r\n                    backgroundColor: 'blue',\r\n                    height: 10,\r\n                }}\r\n            />\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"white-font overflow-auto col-sm\"\r\n                        style={{\r\n                            maxHeight: \"600px\",\r\n                            minWidth: \"800px\"\r\n                        }}>\r\n                        <h1>\r\n                            Available Hardware Sets\r\n                        </h1>\r\n                        <table className=\"table table-dark table-striped table-bordered\">\r\n                            <thead>\r\n                                <tr class=\"table-primary\">\r\n                                    <th>Name</th>\r\n                                    <th>Capacity</th>\r\n                                    <th>Availability</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {currentSets.map(set => (\r\n                                    <HWSet key={set.name}\r\n                                        name={set.name}\r\n                                        capacity={set.capacity}\r\n                                        availability={set.availability} />\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n\r\n                        <Container\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{ minHeight: \"25vh\" }}\r\n                        >\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{ maxWidth: \"450px\" }}\r\n                            >\r\n                                <Card className=\"container-darkmode\">\r\n                                    <Card.Body>\r\n                                        <h2 className=\"text-center mb-4\">Checkout hardware</h2>\r\n                                        {checkoutError && <Alert variant=\"danger\">{checkoutError}</Alert>}\r\n                                        {checkoutMessage && <Alert variant=\"success\">{checkoutMessage}</Alert>}\r\n                                        <Form onSubmit={handleCheckout}>\r\n                                            <Form.Group id=\"checkout\">\r\n                                                <Form.Label>Enter a project ID</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkoutIDRef} required placeholder=\"ID\" />\r\n                                                <Form.Label>Enter a hardware set name</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkoutNameRef} required placeholder=\"Set name\" />\r\n                                                <Form.Label>Enter an amount</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkoutAmountRef} required placeholder=\"Amount to check out\" />\r\n                                                <Form.Label></Form.Label>\r\n                                            </Form.Group>\r\n                                            <Button disabled={checkoutLoading} className=\"w-100\" type=\"submit\">Checkout</Button>\r\n                                        </Form>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                        </Container>\r\n\r\n                        <hr className=\"break2\" />\r\n\r\n                        <Container\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{ minHeight: \"25vh\" }}\r\n                        >\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{ maxWidth: \"450px\" }}\r\n                            >\r\n                                <Card className=\"container-darkmode\">\r\n                                    <Card.Body>\r\n                                        <h2 className=\"text-center mb-4\">Check-in hardware</h2>\r\n                                        {checkinError && <Alert variant=\"danger\">{checkinError}</Alert>}\r\n                                        {checkinMessage && <Alert variant=\"success\">{checkinMessage}</Alert>}\r\n                                        <Form onSubmit={handleCheckin}>\r\n                                            <Form.Group id=\"checkout\">\r\n                                                <Form.Label>Enter a project ID</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkinIDRef} required placeholder=\"ID\" />\r\n                                                <Form.Label>Enter a hardware set name</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkinNameRef} required placeholder=\"Set name\" />\r\n                                                <Form.Label>Enter an amount</Form.Label>\r\n                                                <Form.Control type=\"text\" ref={checkinAmountRef} required placeholder=\"Amount to check in\" />\r\n                                                <Form.Label></Form.Label>\r\n                                            </Form.Group>\r\n                                            <Button disabled={checkinLoading} className=\"w-100\" type=\"submit\">Check-in</Button>\r\n                                        </Form>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <hr\r\n                style={{\r\n                    color: 'blue',\r\n                    backgroundColor: 'blue',\r\n                    height: 10,\r\n                }}\r\n            />\r\n\r\n            <div>\r\n                <Container\r\n                    className=\"align-items-center justify-content-center\"\r\n                    style={{ minHeight: \"25vh\" }}\r\n                >\r\n\r\n                    <h1 className=\"white-font\">Available Datasets</h1>\r\n\r\n                    <table className=\"table table-dark table-striped table-bordered white-font overflow-auto center\"\r\n                        style={{\r\n                            maxHeight: \"600px\",\r\n                            maxWidth: \"1272px\"\r\n                        }}>\r\n                        <thead>\r\n                            <tr class=\"table-primary\">\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Download</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Blood Pressure in Salt-Sensitive Dahl Rats</td>\r\n                                <td>This database contains continuous blood pressure recordings for 9 Dahl SS rats and 6 Dahl SS.13BN rats, under high and low salt conditions.</td>\r\n                                <td><a href=\"https://physionet.org/static/published-projects/bpssrat/blood-pressure-in-salt-sensitive-dahl-rats-1.0.0.zip\">\r\n                                    Download (3.4MB)\r\n                                </a></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Gait in Aging and Disease Database</td>\r\n                                <td>Walking stride interval time series from 15 subjects.</td>\r\n                                <td><a href=\"https://physionet.org/static/published-projects/gaitdb/gait-in-aging-and-disease-database-1.0.0.zip\">\r\n                                    Download (354.6KB)\r\n                                </a></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Long Term AF Database</td>\r\n                                <td>This database includes 84 long-term ECG recordings of subjects with paroxysmal or sustained atrial fibrillation (AF). Each record contains two simultaneously recorded ECG signals digitized at 128 Hz …</td>\r\n                                <td><a href=\"https://physionet.org/static/published-projects/ltafdb/long-term-af-database-1.0.0.zip\">\r\n                                    Download (1.7GB)\r\n                                </a></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>MIT-BIH Arrhythmia Database</td>\r\n                                <td>Two-channel ambulatory ECG recordings, obtained from 47 subjects studied by the BIH Arrhythmia Laboratory between 1975 and 1979.</td>\r\n                                <td><a href=\"https://physionet.org/static/published-projects/mitdb/mit-bih-arrhythmia-database-1.0.0.zip\">\r\n                                    Download (73.5MB)\r\n                                </a></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>MMG Database</td>\r\n                                <td>Uterine magnetomyographic signals from 25 subjects recorded using a 151 channel Reproductive Assessment system.</td>\r\n                                <td><a href=\"https://physionet.org/static/published-projects/mmgdb/mmg-database-1.0.0.zip\">\r\n                                    Download (215.7MB)\r\n                                </a></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Container>\r\n            </div>\r\n\r\n            <hr\r\n                style={{\r\n                    color: 'blue',\r\n                    backgroundColor: 'blue',\r\n                    height: 10,\r\n                }}\r\n            />\r\n\r\n            <Container\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{ minHeight: \"25vh\" }}\r\n            >\r\n                <div\r\n                    className=\"w-100\"\r\n                    style={{ maxWidth: \"450px\" }}\r\n                >\r\n                    <Card className=\"container-darkmode\">\r\n                        <Card.Body>\r\n                            <h2 className=\"text-center mb-4\">Profile</h2>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <strong> Email: </strong>{currentUser.email}\r\n                            <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text center mt-2\">\r\n                        <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport './App.css';\r\n\r\nexport default function Login() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/dashboard\")\r\n        } catch {\r\n            setError('Failed to log in')\r\n        }\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                    <header>\r\n                        <Container\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{ minHeight: \"91vh\" }}\r\n                        >\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{ maxWidth: \"450px\" }}\r\n                            >\r\n\r\n                                <div class=\"card aboutCardBlue\">\r\n                                    <div class=\"card-header aboutCardBlue\">\r\n                                        <h2 class=\"card-title\">About us</h2>\r\n                                        \r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <p class=\"card-text aboutText\">PowerUp Hardware is a Hardware-as-a-Service proof of concept web application\r\n                                            developed by Emran Khan, Jeesoo Min, John Wright, Ryan McSweeney, and Sophia Jiang.\r\n                                            It features the ability to have multiple users, join and create projects, checkout\r\n                                            hardware, check in hardware, and download datasets. We used Heroku as\r\n                                            our cloud host with MongoDB as our database, React as our frontend, and Python Flask\r\n                                            as our backend.</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <hr\r\n                                    style={{\r\n                                        color: 'blue',\r\n                                        backgroundColor: 'blue',\r\n                                        height: 10,\r\n                                    }}\r\n                                />\r\n\r\n                                <div class=\"card aboutCardBlue\">\r\n                                    <div class=\"card-header aboutCardBlue\">\r\n                                        <h2 class=\"card-title\">Contact us</h2>\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <ul class=\"list-group aboutText\">\r\n                                            <li class=\"list-group-item contactList\">John Wright - johnawright@utexas.edu</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Container>\r\n                    </header>\r\n                </div>\r\n\r\n                <div className=\"col-sm\">\r\n                    <header>\r\n                        <Container\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{ minHeight: \"91vh\" }}\r\n                        >\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{ maxWidth: \"450px\" }}\r\n                            >\r\n\r\n                                <Card className=\"container-darkmode\">\r\n                                    <Card.Body>\r\n                                        <h2 className=\"text-center mb-4\">Log In</h2>\r\n                                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                                        <Form onSubmit={handleSubmit}>\r\n                                            <Form.Group id=\"email\">\r\n                                                <Form.Label>Email</Form.Label>\r\n                                                <Form.Control type=\"email\" ref={emailRef} required placeholder=\"Email\" />\r\n                                            </Form.Group>\r\n                                            <Form.Group id=\"password\">\r\n                                                <Form.Label>Password</Form.Label>\r\n                                                <Form.Control type=\"password\" ref={passwordRef} required placeholder=\"Password\" />\r\n                                                <Form.Label></Form.Label>\r\n                                            </Form.Group>\r\n\r\n                                            <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\r\n\r\n                                        </Form>\r\n                                        <div className=\"w-100 text center mt-3\">\r\n                                            <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                                        </div>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n\r\n                                <div className=\"w-100 text center mt-2 white-font\">\r\n                                    Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Container>\r\n                    </header>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function PrivateRoute( { component: Component, ...rest } ) {\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to =\"/login\"/>\r\n            }}\r\n        ></Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function ForgotPassword() {\r\n\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        } catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <header>\r\n                <Container\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                    style={{ minHeight: \"100vh\" }}\r\n                >\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{ maxWidth: \"450px\" }}\r\n                    >\r\n                        <Card className=\"container-darkmode\">\r\n                            <Card.Body>\r\n                                <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n\r\n                                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                                {message && <Alert variant=\"success\">{message}</Alert>}\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group id=\"email\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                                        <Form.Label></Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\r\n\r\n                                </Form>\r\n                                <div className=\"w-100 text center mt-3\">\r\n                                    <Link to=\"/\">Login</Link>\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div className=\"w-100 text center mt-2 white-font\">\r\n                            Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Container>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function UpdateProfile() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser, updateEmail, updatePassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(() => {\r\n            setError('Failed to update account')\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <Container\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                    style={{ minHeight: \"90vh\" }}\r\n                >\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{ maxWidth: \"450px\" }}\r\n                    >\r\n                        <Card className=\"container-darkmode\">\r\n                            <Card.Body>\r\n                                <h2 className=\"text-center mb-4\">Update Profile (work in progress)</h2>\r\n\r\n                                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group id=\"email\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n                                    </Form.Group>\r\n                                    <Form.Group id=\"password\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group id=\"password-confirm\">\r\n                                        <Form.Label>Password Confirmation</Form.Label>\r\n                                        <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n                                        <Form.Label></Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Update</Button>\r\n\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div className=\"w-100 text center mt-2 white-font\">\r\n                            <Link to=\"/dashboard\">Cancel</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Container>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SignUp from './SignUp';\r\nimport { AuthProvider } from '../contexts/AuthContext'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./Dashboard\"\r\nimport Login from \"./Login\"\r\nimport PrivateRoute from './PrivateRoute';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport UpdateProfile from './UpdateProfile';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            names: [],\r\n            loading: true\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true,\r\n        })\r\n        await fetch('/addname/' + this.state.name, {\r\n            method: 'GET'\r\n        });\r\n        this.getNames()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <h1 className=\"gradient-text\">\r\n                    PowerUp Hardware\r\n                </h1>\r\n\r\n                <hr\r\n                    style={{\r\n                    color: 'blue',\r\n                    backgroundColor: 'blue',\r\n                    height: 10\r\n                }}/>\r\n\r\n                <Router>\r\n                    <AuthProvider>\r\n                        <Switch>\r\n                            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n                            <Route path=\"/signup\" component={SignUp} />\r\n                            <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n                            <Route path=\"/\" component={Login} />\r\n                            <Route path=\"/login\" component={Login} />\r\n                        </Switch>\r\n                    </AuthProvider>\r\n                </Router>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}